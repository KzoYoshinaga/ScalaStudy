package start1

class Scala18 {

  /* 3.7 条件演算子
   *
   * ほとんどの条件演算子を祖先言語から取り入れている
   *
   * && : かつ       : 演算子の左辺と右辺の値が真。左辺が真の場合だけ右辺が評価される
   * || : または     : 左辺と右辺の値の少なくともどちらかが真。左辺が偽の場合だけ右辺が評価される
   * >  : より大きい : 左辺の値が右辺の値より大きい
   * >= : 以上       : 左辺の値が右辺の値以上
   * <  : より小さい : 左辺の値が右辺の値より小さい
   * <= : 以下       : 左辺の値が右辺の値以下
   * == : 等しい     : 左辺と右辺の値が等しい
   * != : 等しくない : 左辺と右辺の値が等しくない
   *
   * 短絡演算子: && と || は解が分かった時点で式の評価をやめる
   *
   * == はJavaとScalaでは違う意味を持つ
   */
   def equalSample {
     val a = List("a", "b")
     val b = a
     val c = List("a", "b")
     println(a==b) // true // 参照等値
     println(a==c) // true // 値等値
     // ミュータブルインスタンスは作れない？
   }

}